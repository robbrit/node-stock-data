// Generated by CoffeeScript 1.4.0
var fs, jquery, jsdom, parseBigNum, parseData, path, req, symbols, url;

req = require("request");

jsdom = require("jsdom");

fs = require("fs");

path = require("path");

url = "http://www.google.com/finance?q=";

symbols = {};

jquery = fs.readFileSync(path.resolve(__dirname, "jquery.js")).toString();

parseBigNum = function(str) {
  var found;
  if (str === void 0) {
    return "";
  }
  if (found = str.match(/(\d+(\.\d+))K/i)) {
    return parseFloat(found[1]) * 1000;
  } else if (found = str.match(/(\d+(\.\d+))M/i)) {
    return parseFloat(found[1]) * 1000000;
  } else if (found = str.match(/(\d+(\.\d+))B/i)) {
    return parseFloat(found[1]) * 1000000000;
  } else if (found = str.match(/(\d+(\.\d+))T/i)) {
    return parseFloat(found[1]) * 1000000000000;
  }
};

parseData = function(body, onFinish) {
  return jsdom.env({
    html: body,
    src: [jquery],
    done: function(err, window) {
      var $, data, div, mktData, range, range52Week, sfeSection, vol;
      $ = window.$;
      mktData = $("#market-data-div");
      data = {
        price: parseFloat(mktData.find("#price-panel .pr span").html()),
        range: mktData.find(".snap-data td[data-snapfield=\"range\"]").siblings("td").html().trim(),
        range52Week: mktData.find(".snap-data td[data-snapfield=\"range_52week\"]").siblings("td").html().trim(),
        open: parseFloat(mktData.find(".snap-data td[data-snapfield=\"open\"]").siblings("td").html().trim()),
        volume: mktData.find(".snap-data td[data-snapfield=\"vol_and_avg\"]").siblings("td").html().trim(),
        marketCap: parseBigNum(mktData.find(".snap-data td[data-snapfield=\"market_cap\"]").siblings("td").html().trim()),
        peRatio: parseFloat(mktData.find(".snap-data td[data-snapfield=\"pe_ratio\"]").siblings("td").html().trim()),
        dividend: mktData.find(".snap-data td[data-snapfield=\"latest_dividend-dividend_yield\"]").siblings("td").html().trim(),
        eps: parseFloat(mktData.find(".snap-data td[data-snapfield=\"eps\"]").siblings("td").html().trim()),
        shares: parseBigNum(mktData.find(".snap-data td[data-snapfield=\"shares\"]").siblings("td").html().trim()),
        beta: parseFloat(mktData.find(".snap-data td[data-snapfield=\"beta\"]").siblings("td").html().trim())
      };
      div = data.dividend.split("/");
      data.dividend = parseFloat(div[0]);
      data.dividendYield = parseFloat(div[1]);
      vol = data.volume.split("/");
      data.volume = parseBigNum(vol[0]);
      data.averageVolume = parseBigNum(vol[1]);
      range = data.range.split("-");
      data.rangeStart = parseFloat(range[0].trim());
      data.rangeEnd = parseFloat(range[1].trim());
      range52Week = data.range52Week.split("-");
      data.range52WeekStart = parseFloat(range52Week[0].trim());
      data.range52WeekEnd = parseFloat(range52Week[1].trim());
      sfeSection = $(".sfe-section .quotes");
      sfeSection.find("tr").each(function() {
        var match, name, td, _ref;
        name = $("td.name", this);
        if ((_ref = name.html()) != null ? _ref.match(/net profit margin/i) : void 0) {
          td = $("td.period", this).get(0);
          match = td.innerHTML.match(/(\d+\.\d+)%/);
          return data.netProfitMargin = parseFloat(match[1]);
        }
      });
      return onFinish(data);
    }
  });
};

exports.fundamentals = function(mkt, sym, onFinish) {
  var fullSym;
  fullSym = "" + mkt + ":" + sym;
  if (symbols[fullSym]) {
    return onFinish(null, symbols[fullSym]);
  } else {
    return req("" + url + fullSym, function(err, resp, body) {
      if (!err && resp.statusCode === 200) {
        return parseData(body, function(data) {
          symbols[fullSym] = data;
          return onFinish(null, symbols[fullSym]);
        });
      } else {
        return onFinish(err, null);
      }
    });
  }
};
